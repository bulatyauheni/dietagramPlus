package bulat.diet.helper_sport.adapter;

import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.CursorAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.TimePicker;
import bulat.diet.helper_sport.R;
import bulat.diet.helper_sport.activity.CalendarActivity;
import bulat.diet.helper_sport.activity.CalendarActivityGroup;
import bulat.diet.helper_sport.activity.ChatActivity;
import bulat.diet.helper_sport.activity.Info;
import bulat.diet.helper_sport.activity.NotificationActivity;
import bulat.diet.helper_sport.activity.SocialActivityGroup;
import bulat.diet.helper_sport.activity.SocialDishActivity;
import bulat.diet.helper_sport.activity.SocialUserListActivity;
import bulat.diet.helper_sport.db.DishProvider;
import bulat.diet.helper_sport.db.TodayDishHelper;
import bulat.diet.helper_sport.item.NotificationDish;
import bulat.diet.helper_sport.item.User;
import bulat.diet.helper_sport.utils.DialogUtils;
import bulat.diet.helper_sport.utils.SaveUtils;
import bulat.diet.helper_sport.utils.SocialUpdater;

public class NotificationsAdapter extends ArrayAdapter<NotificationDish> {
	DecimalFormat df = new DecimalFormat("###.#");
	private Context ctx;
	private Activity parentVal;
	List<NotificationDish> list;
	NotificationActivity page;
	private int layoutResourceId;

	public NotificationsAdapter(NotificationActivity notificationActivity,
			Context context, int layoutResourceId,
			ArrayList<NotificationDish> list2,
			Activity activity) {
		super(context, layoutResourceId);
		this.list = list2;
		this.layoutResourceId = layoutResourceId;
		this.page = notificationActivity;
		ctx = context;
		this.parentVal = activity;
		// TODO Auto-generated constructor stub
	}

	@Override
	public int getCount() {
		if (list != null) {
			return list.size();
		}
		return 0;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {

		LinearLayout rowView;
		NotificationDish notif = null;
		try {
			notif = list.get(position);
		} catch (IndexOutOfBoundsException e) {
			e.printStackTrace();
		}

		if (convertView == null) {
			rowView = new LinearLayout(getContext());
			String inflater = Context.LAYOUT_INFLATER_SERVICE;
			LayoutInflater vi = (LayoutInflater) getContext().getSystemService(
					inflater);
			vi.inflate(layoutResourceId, rowView, true);
		} else {
			rowView = (LinearLayout) convertView;
		}

		if (notif != null) {

			int itemEnabled = notif.getEnabled();
			CheckBox enabedCB = (CheckBox) rowView.findViewById(R.id.enabledCB);
			TextView nameTextView = (TextView) rowView
					.findViewById(R.id.textViewNotification);
			nameTextView.setText(notif.getName());
			TextView tvi = (TextView) rowView.findViewById(R.id.textViewId);
			TextView tvi2 = (TextView) rowView.findViewById(R.id.textViewId2);
			TextView tviHH = (TextView) rowView.findViewById(R.id.textViewHH);
			TextView tviMM = (TextView) rowView.findViewById(R.id.textViewMM);
			Button nButton = (Button) rowView.findViewById(R.id.b_notif);
			tvi.setText(notif.getId());
			tvi2.setText(notif.getId());
			tviHH.setText(notif.getTimeHH());
			tviMM.setText(notif.getTimeMM());
			
			if (itemEnabled == 1) {
				enabedCB.setChecked(true);
			} else {
				enabedCB.setChecked(false);

			}
			// enabedCB.setId(Integer.parseInt(notif.getId()));
			// weightButton.setId(Integer.parseInt(c.getString(c.getColumnIndex(DishProvider.TODAY_DISH_DATE_LONG))));
			enabedCB.setOnCheckedChangeListener(new OnCheckedChangeListener() {
				public void onCheckedChanged(CompoundButton v,
						boolean isChecked) {
					if (isChecked) {
						CompoundButton mbut = (CompoundButton) v;
						final TextView tvi2 = (TextView) ((View) mbut
								.getParent()).findViewById(R.id.textViewId);
						
						final Dialog dialog = new Dialog(parentVal);
						dialog.setContentView(R.layout.update_weight_dialog);
						dialog.setTitle(R.string.change_weight_dialog_title);

						final Spinner weightSpinner = (Spinner) dialog
								.findViewById(R.id.search_weight);
						final Spinner weightSpinnerDec = (Spinner) dialog
								.findViewById(R.id.search_weight_decimal);
						DialogUtils.setArraySpinnerValues(weightSpinner,
								Info.MIN_WEIGHT, Info.MAX_WEIGHT, ctx);
						DialogUtils.setArraySpinnerValues(weightSpinnerDec, 0,
								10, ctx);
						weightSpinner.setSelection(SaveUtils.getWeight(ctx));
						weightSpinnerDec.setSelection(SaveUtils
								.getWeightDec(ctx));
						Button buttonOk = (Button) dialog
								.findViewById(R.id.buttonYes);
						buttonOk.setOnClickListener(new OnClickListener() {

							public void onClick(View v) {
								TodayDishHelper.updateDayWeight(
										ctx,
										tvi2.getText().toString(),
										String.valueOf(((float) weightSpinner
												.getSelectedItemId() + Info.MIN_WEIGHT)
												+ (float) weightSpinnerDec
														.getSelectedItemId()
												/ 10));
								dialog.cancel();
								page.resume();
							}
						});
						Button nobutton = (Button) dialog
								.findViewById(R.id.buttonNo);
						nobutton.setOnClickListener(new OnClickListener() {

							public void onClick(View v) {
								dialog.cancel();
							}
						});
						dialog.show();
					}
				}
			});
			nButton.setOnClickListener(new View.OnClickListener() {

				public void onClick(View v) {
					Button mbut = (Button) v;
					final TextView tvi2 = (TextView) ((View) mbut.getParent())
							.findViewById(R.id.textViewId2);
					final Dialog dialog = new Dialog(parentVal);
					dialog.setContentView(R.layout.set_notification_dialog);
					dialog.setTitle(R.string.set_notif_dialog_title);
					final TextView tviHH = (TextView) ((View) mbut
							.getParent()).findViewById(R.id.textViewHH);
					final TextView tviMM = (TextView) ((View) mbut
							.getParent()).findViewById(R.id.textViewMM);
					final TimePicker time = (TimePicker) dialog
							.findViewById(R.id.timePickerNotif);
					final CheckBox chb = (CheckBox) dialog
							.findViewById(R.id.enabledNotifCB);
					chb.setOnCheckedChangeListener(new OnCheckedChangeListener() {
						public void onCheckedChanged(CompoundButton v,
								boolean isChecked) {
							time.setEnabled(isChecked);
						}
					});
					// set current time into timepicker
					time.setCurrentHour(Integer.valueOf(tviHH.getText().toString()));
					time.setCurrentMinute(Integer.valueOf(tviMM.getText().toString()));
					
					
					Button buttonOk = (Button) dialog
							.findViewById(R.id.buttonYes);
					buttonOk.setOnClickListener(new OnClickListener() {

						public void onClick(View v) {
							
							dialog.cancel();
							page.resume();
						}
					});
					Button nobutton = (Button) dialog
							.findViewById(R.id.buttonNo);
					nobutton.setOnClickListener(new OnClickListener() {

						public void onClick(View v) {
							dialog.cancel();
						}
					});
					dialog.show();

				}
			});
		}

		return rowView;
	}
}
