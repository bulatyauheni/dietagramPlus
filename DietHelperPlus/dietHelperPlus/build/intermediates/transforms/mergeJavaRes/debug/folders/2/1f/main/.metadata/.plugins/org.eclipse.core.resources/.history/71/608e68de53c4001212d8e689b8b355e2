package bulat.diet.helper_ru.utils;


import java.util.Random;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.preference.PreferenceManager;
import bulat.diet.helper_ru.activity.Info;

public class SaveUtils {
	
	public static final String BMI = "BMI";
	public static final String BMR = "BMR";
	public static final String META = "META";
	public static final String HEIGHT = "HIGHT";
	public static final String WEIGHT = "WEIGHT";
	public static final String AGE = "AGE";
	public static final String SEX = "SEX";
	public static final String ACTIVITY = "ACTIVITY";
	public static final String SEARCH_HEIGHT = "SEARCH_HIGHT";
	public static final String SEARCH_WEIGHT = "SEARCH_WEIGHT";
	public static final String SEARCH_AGE = "SEARCH_AGE";
	public static final String SEARCH_SEX = "SEARCH_SEX";
	public static final String SEARCH_ACTIVITY = "SEARCH_ACTIVITY";

	public static final String FIRSTTIME = "FIRSTTIMERun";
	public static final String ACTIVATED = "activated";
	private static final String MODE = "mode";
	private static final String SEARCH_WEIGHT_ENBL = "weight_chec";
	private static final String SEARCH_SEX_ENBL = "sex_chec";
	private static final String SEARCH_HEIGHT_ENBL = "height_chec";
	private static final String SEARCH_ACTIVITY_ENBL = "activity_chec";
	private static final String SEARCH_AGE_ENBL = "age_chec";
	private static final String NIKNAME = "nikname";
	private static final String SEARCH_NAME_ENBL = "name_chec";
	private static final String SEARCH_NAME = "searchname";
	private static final String USERUNICID = "userunicid";
	private static final String REQUEST = "requestque";
	public static final String SEPARATOR = "separator";
	private static final String REQUESTDISH = "requestdish";
	private static final String MESSAGESCOUNT = "messages_count";
	private static final String USERUNICIDFAKE = "fakenum";
	private static final String SCROLLPOSS = "scrollposs";
	private static final String WEIGHT_DEC = "weight_dec";
	private static final String LASTTIME = "LASTTIME";
	private static final String URLSOCIAL = "URLSOCIAL";
	private static final String URLBASE = "URLBASE";
	private static final String USERADVICID = "USERADVICID";
	private static final String LASTVISITTIME = "LASTVISITTIME";
	private static final String LASTADVUPDATETIME = "LASTADVUPDATETIME";
	private static final String LASTADVSHOWN = "LASTADVSHOWN";
	private static final String ADVID = "ADVID";
	private static final String LASTNOTIFSHOWN = "LASTNOTIFSHOWN";
	private static final String CURRADV = "CURRADV";
	private static final String SPORT_LOADED = "SPORT_LOADED";
	private static final String CITY = "CITY";
	private static final String CCODE = "CCODE";
	private static final String ADVSHOW = "ADVSHOW";
	
	public static void saveScrollPosition(int pos, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putInt(SCROLLPOSS, pos);
		
		editor.commit();
	}
	public static int loadScrollPosition(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getInt(SCROLLPOSS, 0);
	}
	public static void saveRequestBody(String text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();

		editor.putString(REQUEST, text);		
		editor.commit();
	}
	public static String getRequestBody(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getString(REQUEST, "");
	}
	
	public static void saveRequestDish(String text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();

		editor.putString(REQUESTDISH, text + SEPARATOR);		
		editor.commit();
	}
	public static String getRequestDish(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getString(REQUESTDISH, "");
	}
	public static void saveNewMessagesCount(int count, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();

		editor.putInt(MESSAGESCOUNT, count);		
		editor.commit();
	}
	public static int getNewMessagesCount(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getInt(MESSAGESCOUNT, 0);
	}
	
	
	public static void saveBMI(String text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putString(BMI, text);		
		editor.commit();
	}
	
	public static String getBMI(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getString(BMI, "");
	}
	
	public static void saveBMR(String text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putString(BMR, text);		
		editor.commit();
	}
	
	public static String getBMR(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getString(BMR, "");
	}
	
	public static void saveMETA(String text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putString(META, text);		
		editor.commit();
	}
	
	public static String getMETA(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getString(META, "");
	}
	
	public static void saveHeight(int text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putInt(HEIGHT, text);		
		editor.commit();
	}
	
	public static int getHeight(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getInt(HEIGHT, 25);
	}
	
	public static void saveWeight(int text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putInt(WEIGHT, text);		
		editor.commit();
	}
	
	public static int getWeight(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getInt(WEIGHT, 25);
	}
	
	public static float getRealWeight(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return (float)preferences.getInt(WEIGHT, 25) + (float)preferences.getInt(WEIGHT_DEC, 5)/10 + Info.MIN_WEIGHT;
	}
	
	
	public static void saveAge(int text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putInt(AGE, text);		
		editor.commit();
	}
	
	public static int getAge(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getInt(AGE, 5);
	}
	
	public static void saveSex(int text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putInt(SEX, text);		
		editor.commit();
	}
	
	public static int getSex(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getInt(SEX, 0);
	}
	
	public static void saveActivity(int text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putInt(ACTIVITY, text);		
		editor.commit();
	}
	
	public static int getActivity(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getInt(ACTIVITY, 0);
	}

	public static void saveMode(int text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putInt(MODE, text);		
		editor.commit();
	}
	
	public static int getMode(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getInt(MODE, 1);
	}
	
	public static boolean isFirstTime(Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getBoolean(FIRSTTIME, true);
	}

	public static void setFirstTime(Context context, boolean b) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putBoolean(FIRSTTIME, b);		
				editor.commit();
	}
	
	public static void setUserUnicId(Context context, int b) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				   Random ran = new Random();

				   int x = ran.nextInt(400000) + 500000;
				   while (x%b == 0) {
					x++;
				   }
				   
				editor.putInt(USERUNICID, b);	
				editor.putString(USERUNICIDFAKE, String.valueOf(x));	
				editor.commit();
	}
	
	public static int getUserUnicId(Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getInt(USERUNICID, 0);
	
	}
	public static void setUserAdvId(Context context, int b) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();   
				editor.putInt(USERADVICID, b);	
				editor.commit();
	}
	
	public static int getUserAdvId(Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);				
				return preferences.getInt(USERADVICID, 0);
	
	}
	public static boolean isActivated(Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getBoolean(ACTIVATED, false);
	}

	public static void setActivated(Context context, boolean b) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putBoolean(ACTIVATED, b);		
				editor.commit();
	}
	
	public static void saveSearchName(String selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putString(SEARCH_NAME, selectedItemId);		
				editor.commit();
	}

	public static void saveSearchAge(int selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putInt(SEARCH_AGE, selectedItemId);		
				editor.commit();
	}

	public static void saveSearchActivity(int selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putInt(SEARCH_ACTIVITY, selectedItemId);		
				editor.commit();
	}

	public static void saveSearchHeight(int selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putInt(SEARCH_HEIGHT, selectedItemId);		
				editor.commit();
	}

	public static void saveSearchSex(int selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putInt(SEARCH_SEX, selectedItemId);		
				editor.commit();
	}

	public static void saveSearchWeight(int selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putInt(SEARCH_WEIGHT, selectedItemId);		
				editor.commit();
	}

	public static String getSearchName(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getString(SEARCH_NAME, "");
	}

	public static int getSearchAge(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getInt(SEARCH_AGE, getAge(context));
	}

	public static int getSearchActivity(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getInt(SEARCH_ACTIVITY, getActivity(context));
	}

	public static int getSearchHeight(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getInt(SEARCH_HEIGHT, getHeight(context));
	}

	public static int getSearchSex(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getInt(SEARCH_SEX, getSex(context));
	}

	public static int getSearchWeight(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getInt(SEARCH_WEIGHT, getWeight(context));
	}
	
	///////
	
	public static void saveSearchNameEnbl(Boolean selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putBoolean(SEARCH_NAME_ENBL, selectedItemId);		
				editor.commit();
	}

	
	public static void saveSearchAgeEnbl(Boolean selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putBoolean(SEARCH_AGE_ENBL, selectedItemId);		
				editor.commit();
	}

	public static void saveSearchActivityEnbl(Boolean selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putBoolean(SEARCH_ACTIVITY_ENBL, selectedItemId);		
				editor.commit();
	}

	public static void saveSearchHeightEnbl(Boolean selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putBoolean(SEARCH_HEIGHT_ENBL, selectedItemId);		
				editor.commit();
	}

	public static void saveSearchSexEnbl(Boolean selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putBoolean(SEARCH_SEX_ENBL, selectedItemId);		
				editor.commit();
	}

	public static void saveSearchWeightEnbl(Boolean selectedItemId,
			Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putBoolean(SEARCH_WEIGHT_ENBL, selectedItemId);		
				editor.commit();
	}

	public static boolean getSearchNameEnbl(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getBoolean(SEARCH_NAME_ENBL, false);
	}

	public static boolean getSearchAgeEnbl(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getBoolean(SEARCH_AGE_ENBL, true);
	}

	public static Boolean getSearchActivityEnbl(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getBoolean(SEARCH_ACTIVITY_ENBL, true);
	}

	public static Boolean getSearchHeightEnbl(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getBoolean(SEARCH_HEIGHT_ENBL, true);
	}

	public static Boolean getSearchSexEnbl(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getBoolean(SEARCH_SEX_ENBL, true);
	}

	public static Boolean getSearchWeightEnbl(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getBoolean(SEARCH_WEIGHT_ENBL, true);
	}
	
	//network name
	public static void setNikName(Context context, String b) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putString(NIKNAME, b);		
				editor.commit();
	}
	
	public static String getNikName(Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getString(NIKNAME, "");
	}
	public static String getUserUnicIdFake(Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getString(USERUNICIDFAKE, "") + preferences.getInt(USERUNICID, 0);
	}
	
	public static void saveWeightDec(int text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putInt(WEIGHT_DEC, text);		
		editor.commit();
	}
	public static int getWeightDec(Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
				return preferences.getInt(WEIGHT_DEC, 0);
	}
	public static void saveLastTime(int text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putInt(LASTTIME, text);		
		editor.commit();
	}
	
	public static int getLastTime(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getInt(LASTTIME, 0);
	}
	
	public static void setLastVisitTime(long text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putLong(LASTVISITTIME, text);		
		editor.commit();
	}
	
	public static long getLastVisitTime(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getLong(LASTVISITTIME, 0);
	}
	public static void setLastAdvUpdateTime(long text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putLong(LASTADVUPDATETIME, text);		
		editor.commit();
	}
	
	public static long getLastAdvUpdateTime(Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		
		return preferences.getLong(LASTADVUPDATETIME, 0);
	}
	public static void setLastAdvShownDate(long text, Context context){
		SharedPreferences preferences = PreferenceManager
		.getDefaultSharedPreferences(context);
		Editor editor = preferences.edit();
		
		editor.putLong(LASTADVSHOWN, text);		
		editor.commit();
	}
	public static long getLastAdvShownDate(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
		return preferences.getLong(LASTADVSHOWN, 0);
	}
	public static void setAdvNameToShow(String id,
			Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putString(ADVID, id);		
				editor.commit();
	}
	public static String getAdvNameShow(Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
		return preferences.getString(ADVID, "");
	}
	public static void clearAdvNameToShow(Context context) {
		SharedPreferences preferences = PreferenceManager
			.getDefaultSharedPreferences(context);
			Editor editor = preferences.edit();				
			editor.putString(ADVID, "");		
			editor.commit();
	}
	
	public static long getLastNtifShownDate(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
		return preferences.getLong(LASTNOTIFSHOWN, 0);
	}
	public static void setLastNtifShownDate(long date,
			Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putLong(LASTNOTIFSHOWN, date);		
				editor.commit();
	}
	public static String getCurrAdv(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
		return preferences.getString(CURRADV, "");
	}
	public static void setCurrAdv(String name,
			Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putString(CURRADV, name);		
				editor.commit();
	}
	public static Boolean isSportLoaded(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
		return preferences.getBoolean(SPORT_LOADED, false);
	}
	public static void setSportLoaded(Boolean name,
			Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putBoolean(SPORT_LOADED, name);		
				editor.commit();
	}
	public static String getCity(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
		return preferences.getString(CITY, "");
	}
	public static void setCity(String date,
			Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putString(CITY, date);		
				editor.commit();
	}
	public static String getCountryCode(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
		return preferences.getString(CCODE, "");
	}
	public static void setCountryCode(String date,
			Context context) {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putString(CCODE, date);		
				editor.commit();
	}
	public static void setShowAdvert(boolean b, Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				Editor editor = preferences.edit();
				
				editor.putBoolean(ADVSHOW, b);		
				editor.commit();
	}
	public Boolean isShowAdvert(Context context) {
		// TODO Auto-generated method stub
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(context);
				
		return preferences.getBoolean(ADVSHOW, false);
	}
}
